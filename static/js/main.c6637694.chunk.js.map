{"version":3,"sources":["components/MovieCard/MovieCard.js","Types/types.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["MovieCard","PropTypes","shape","title","string","isRequired","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","query","filteredMovieByTitle","filter","movie","toLowerCase","includes","map","key","imdbId","defaultProps","App","state","changeQuery","event","target","value","name","setState","this","htmlFor","type","id","placeholder","onChange","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"iyEAIaA,GCFYC,IAAUC,MAAM,CACvCC,MAAOF,IAAUG,OAAOC,WACxBC,YAAaL,IAAUG,OACvBG,OAAQN,IAAUG,OAAOC,WACzBG,QAASP,IAAUG,OAAOC,a,YDFH,SAAC,GAAD,IACvBF,EADuB,EACvBA,MACAG,EAFuB,EAEvBA,YACAC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcN,KAI/B,yBAAKM,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aE9BD,SAASK,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC7BC,EAAuBF,EAAOG,QAClC,SAAAC,GAAK,OAAIA,EAAMf,MAAMgB,cAAcC,SAASL,EAAMI,gBAC/CD,EAAMZ,YAAYa,cAAcC,SAASL,EAAMI,kBAGpD,OACE,yBAAKV,UAAU,UACZO,EAAqBK,KAAI,SAAAH,GAAK,OAC7B,kBAAC,EAAD,CACEI,IAAKJ,EAAMK,OACXpB,MAAOe,EAAMf,MACbG,YAAaY,EAAMZ,YACnBC,OAAQW,EAAMX,OACdC,QAASU,EAAMV,cF0BzBR,EAAUwB,aAAe,CACvBlB,YAAa,IEbfO,EAAWW,aAAe,CACxBV,OAAQ,GACRC,MAAO,I,WChCIU,EAAb,4MACEC,MAAQ,CACNX,MAAO,IAFX,EAKEY,YAAc,SAACC,GAAW,IAAD,EACCA,EAAMC,OAAtBC,EADe,EACfA,MAAOC,EADQ,EACRA,KAEf,EAAKC,SAAL,eAAkBD,EAAOD,KAR7B,4CAWE,WAAU,IACAf,EAAUkB,KAAKP,MAAfX,MACAY,EAAgBM,KAAhBN,YAER,OACE,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOyB,QAAQ,eAAezB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACE0B,KAAK,OACLC,GAAG,eACHN,MAAOf,EACPN,UAAU,QACVsB,KAAK,QACLM,YAAY,mBACZC,SAAUX,OAMlB,kBAAC,EAAD,CACEb,OAAQyB,EACRxB,MAAOA,KAGX,yBAAKN,UAAU,WAAf,0BA3CR,GAAyB+B,aCAzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c6637694.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { MovieType } from '../../Types/types';\n\nexport const MovieCard = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  MovieType,\n}.isRequired;\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import PropTypes from 'prop-types';\n\nexport const MovieType = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieType } from '../../Types/types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport function MoviesList({ movies, query }) {\n  const filteredMovieByTitle = movies.filter(\n    movie => movie.title.toLowerCase().includes(query.toLowerCase())\n    || movie.description.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  return (\n    <div className=\"movies\">\n      {filteredMovieByTitle.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          title={movie.title}\n          description={movie.description}\n          imgUrl={movie.imgUrl}\n          imdbUrl={movie.imdbUrl}\n        />\n      ))}\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    MovieType,\n  ),\n  query: PropTypes.string,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  query: '',\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  changeQuery = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(({ [name]: value }));\n  }\n\n  render() {\n    const { query } = this.state;\n    const { changeQuery } = this;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <label htmlFor=\"search-query\" className=\"label\">\n                Search movie\n              </label>\n\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  id=\"search-query\"\n                  value={query}\n                  className=\"input\"\n                  name=\"query\"\n                  placeholder=\"Type search word\"\n                  onChange={changeQuery}\n                />\n              </div>\n            </div>\n          </div>\n\n          <MoviesList\n            movies={moviesFromServer}\n            query={query}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}